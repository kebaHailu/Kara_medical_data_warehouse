{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.7", "generated_at": "2024-10-11T14:02:52.615189Z", "invocation_id": "720550a1-8e79-43fb-865a-1dc52b5dbe82", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-11T14:02:49.896705Z", "completed_at": "2024-10-11T14:02:49.920034Z"}, {"name": "execute", "started_at": "2024-10-11T14:02:50.021531Z", "completed_at": "2024-10-11T14:02:51.729524Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.8702709674835205, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": "SELECT 1", "failures": null, "unique_id": "model.ethio_medical_project.transformed_contact_number", "compiled": true, "compiled_code": "-- models/transformed_product_images.sql\n\n\nWITH source_data AS (\n    SELECT\n        channel_id,\n        contact_phone_numbers\n    FROM \"medical_data\".\"public\".\"transformed_medical_product\"\n    WHERE contact_phone_numbers IS NOT NULL AND contact_phone_numbers != ''  -- Filter out any null or empty paths\n)\n\nSELECT DISTINCT ON (channel_id)  -- Ensure unique channel usernames\n    channel_id,\n    contact_phone_numbers  -- Rename the column to be clearer\nFROM source_data", "relation_name": "\"medical_data\".\"public\".\"transformed_contact_number\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-11T14:02:49.864216Z", "completed_at": "2024-10-11T14:02:49.902173Z"}, {"name": "execute", "started_at": "2024-10-11T14:02:49.904623Z", "completed_at": "2024-10-11T14:02:51.747630Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.908043622970581, "adapter_response": {"_message": "SELECT 2236", "code": "SELECT", "rows_affected": 2236}, "message": "SELECT 2236", "failures": null, "unique_id": "model.ethio_medical_project.ethio_medical", "compiled": true, "compiled_code": "-- models/ethio_medical.sql\n  -- Correcting the materialization syntax\n\nWITH source_data AS (\n    SELECT * \n    FROM \"medical_data\".\"public\".\"ethio_medical\"  -- Use DBT's source function\n)\n\nSELECT\n    channel_id,\n    channel_title,\n    lower(channel_username) AS channel_username,\n    message_id,\n    \"Message\",\n    date,\n    media_path\nFROM source_data\nWHERE \"Message\" IS NOT NULL", "relation_name": "\"medical_data\".\"public\".\"ethio_medical\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-11T14:02:49.890183Z", "completed_at": "2024-10-11T14:02:49.903975Z"}, {"name": "execute", "started_at": "2024-10-11T14:02:49.967489Z", "completed_at": "2024-10-11T14:02:51.758522Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.9052433967590332, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": "SELECT 1", "failures": null, "unique_id": "model.ethio_medical_project.transformed_channel", "compiled": true, "compiled_code": "-- models/transformed_product_images.sql\n\n\nWITH source_data AS (\n    SELECT\n        channel_id,\n        channel_username,\n        channel_title\n    FROM \"medical_data\".\"public\".\"transformed_medical_product\"\n    WHERE contact_phone_numbers IS NOT NULL AND contact_phone_numbers != ''  -- Filter out any null or empty paths\n)\n\nSELECT DISTINCT ON (channel_id)  -- Ensure unique channel usernames\n    channel_id,\n    channel_username,\n    channel_title  -- Rename the column to be clearer\nFROM source_data", "relation_name": "\"medical_data\".\"public\".\"transformed_channel\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-11T14:02:49.870933Z", "completed_at": "2024-10-11T14:02:49.903070Z"}, {"name": "execute", "started_at": "2024-10-11T14:02:49.935343Z", "completed_at": "2024-10-11T14:02:51.786806Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.9514527320861816, "adapter_response": {"_message": "SELECT 2143", "code": "SELECT", "rows_affected": 2143}, "message": "SELECT 2143", "failures": null, "unique_id": "model.ethio_medical_project.transfomed_product", "compiled": true, "compiled_code": "-- models/transformed_product_images.sql\n\n\nWITH source_data AS (\n    SELECT\n        channel_id,\n        message_id as product_id,\n        product_name,\n        price_in_birr  -- Rename the column to be clearer\n    FROM \"medical_data\".\"public\".\"transformed_medical_product\"\n)\n\nSELECT   -- Ensure unique channel usernames\n    channel_id,\n    product_id,\n    product_name,\n    price_in_birr  -- Rename the column to be clearer\nFROM source_data", "relation_name": "\"medical_data\".\"public\".\"transfomed_product\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-11T14:02:51.816025Z", "completed_at": "2024-10-11T14:02:51.837471Z"}, {"name": "execute", "started_at": "2024-10-11T14:02:51.839105Z", "completed_at": "2024-10-11T14:02:52.230227Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.42433905601501465, "adapter_response": {"_message": "SELECT 2143", "code": "SELECT", "rows_affected": 2143}, "message": "SELECT 2143", "failures": null, "unique_id": "model.ethio_medical_project.transformed_product_images", "compiled": true, "compiled_code": "-- models/transformed_product_images.sql\n\n\nWITH source_data AS (\n    SELECT \n        message_id,\n        media_path  -- Assuming this column contains the image paths\n    FROM \"medical_data\".\"public\".\"transformed_medical_product\"\n    WHERE media_path IS NOT NULL AND media_path != ''  -- Filter out any null or empty paths\n)\n\nSELECT\n    message_id,\n    media_path AS image_path  -- Rename the column to be clearer\nFROM source_data", "relation_name": "\"medical_data\".\"public\".\"transformed_product_images\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-11T14:02:51.790027Z", "completed_at": "2024-10-11T14:02:51.813356Z"}, {"name": "execute", "started_at": "2024-10-11T14:02:51.826125Z", "completed_at": "2024-10-11T14:02:52.562473Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.7893202304840088, "adapter_response": {"_message": "SELECT 2143", "code": "SELECT", "rows_affected": 2143}, "message": "SELECT 2143", "failures": null, "unique_id": "model.ethio_medical_project.transformed_medical_product", "compiled": true, "compiled_code": "\n\nWITH source_data AS (\n    SELECT * \n    FROM \"medical_data\".\"public\".\"ethio_medical\"\n),\nphone_extracted AS (\n    SELECT\n        channel_id,\n        message_id,\n        channel_title,\n        lower(channel_username) AS channel_username,\n        \"Message\",\n        date,\n        media_path,  -- Ensure this is being selected\n        -- Extract phone numbers with optional spaces\n        array_to_string(ARRAY(\n            SELECT regexp_replace(unnest(regexp_matches(\"Message\", '09\\s*[0-9]{8}', 'g')), '\\s+', '', 'g')\n        ), ', ') AS phone_numbers,\n        -- Clean the message of phone numbers\n        regexp_replace(\n            \"Message\", \n            '09\\s*[0-9]{8}', \n            '', \n            'g'\n        ) AS cleaned_message\n    FROM source_data\n),\nproduct_price_extracted AS (\n    SELECT\n        channel_id,\n        message_id,\n        channel_title,\n        channel_username,\n        date,\n        TRIM(cleaned_message) AS cleaned_message,\n        phone_numbers,\n        -- Adjusted regex to capture product names and prices\n        regexp_matches(cleaned_message, '^(.*?)\\s*(?:price|Price|PRICE)\\s*(\\d+)\\s*(birr|ETB)', 'g') AS matches,\n        media_path,  -- Include media_path here\n        ROW_NUMBER() OVER (PARTITION BY message_id ORDER BY date DESC) AS rn  -- Add row number to filter\n    FROM phone_extracted\n)\n\nSELECT\n    channel_id,\n    message_id,\n    channel_title,\n    channel_username,\n    date,\n    TRIM(matches[1]) AS product_name,  -- Extract product name\n    CAST(TRIM(matches[2]) AS INTEGER) AS price_in_birr,  -- Extract price as an integer\n    media_path,  -- Include media_path in the final selection\n    CASE\n        WHEN phone_numbers IS NOT NULL AND phone_numbers != '' THEN phone_numbers\n        ELSE NULL\n    END AS contact_phone_numbers  -- Renamed for clarity\nFROM product_price_extracted\nWHERE matches IS NOT NULL  -- Filter out any rows where matches are not found\nAND rn = 1  -- Select only the first occurrence of each message_id\nAND TRIM(matches[1]) <> ''  -- Drop empty product names\nAND TRIM(matches[1]) <> TRIM(matches[2])  -- Drop rows where product name and price are the same\nORDER BY message_id  -- Optional: order by message_id", "relation_name": "\"medical_data\".\"public\".\"transformed_medical_product\""}], "elapsed_time": 6.469783544540405, "args": {"populate_cache": true, "send_anonymous_usage_stats": true, "project_dir": "/home/noh/10Academy/EthiomedDataWarehouse/ethio_medical_project", "vars": {}, "indirect_selection": "eager", "warn_error_options": {"include": [], "exclude": []}, "quiet": false, "show_resource_report": false, "log_level_file": "debug", "select": [], "log_level": "info", "use_colors": true, "partial_parse": true, "source_freshness_run_project_hooks": false, "favor_state": false, "introspect": true, "log_file_max_bytes": 10485760, "log_format_file": "debug", "strict_mode": false, "log_path": "/home/noh/10Academy/EthiomedDataWarehouse/ethio_medical_project/logs", "which": "run", "invocation_command": "dbt run", "macro_debugging": false, "require_resource_names_without_spaces": false, "log_format": "default", "static_parser": true, "empty": false, "profiles_dir": "/home/noh/.dbt", "use_colors_file": true, "write_json": true, "defer": false, "cache_selected_only": false, "printer_width": 80, "partial_parse_file_diff": true, "version_check": true, "enable_legacy_logger": false, "exclude": [], "require_explicit_package_overrides_for_builtin_materializations": true, "print": true}}